#!/bin/bash
#      recentchanges search        filtered     recentchanges v3.0    08/01/2025
#
#   rlt or rlt n         search for filtered files to /Downloads as opposed to recentchanges search would be unfiltered
#   rlt SRC or rlt SRC n or rlt n SRC       /tmp
#   rlt query
#
# If some as root calls the program with 2 arguments thats not intended use so exit
# we would fail to get our correct username such as they put a second bogus argument
if [ `whoami` != "root" ]; then
	echo "Please enter your root password below"
	if [ "$1" == "search" ]; then echo "usage rnt 60, rnt src rnt 60 src or rnt myfile" && exit; fi
    if [ "$1" == "query" ] || [ "$1" == "SRC" ] || [ "$1" == "src" ]; then
        argone=$1
		argtwo=$2
		if [ -z "$argtwo" ]; then argtwo="noarguser"; fi
	else
        argone="search"
        argtwo="$1"
    fi
	if [ "$2" == "SRC" ] || [ "$2" == "src" ]; then  # flipped
		argone=$2
		argtwo=$1	
	fi    
    su - -c "/usr/local/save-changesnew/filteredsearch $argone '$argtwo' `whoami` '$PWD'"
    exit
fi
USR=$3 ; dir="$4"
if [ "$3" == "" ] || [ "$4" == "" ]; then USR="guest"; dir="$PWD"; fi #Default user & pwd
test -d "$dir" || { echo  "not a valid directory. usage rnt search time."; exit 1; }
if  ! id $3 >/dev/null 2>&1; then  echo "user:" ${3} "not found"; exit 1 ; fi # quick user check if called by root    recentchanges compile asdfas asdfasd    it could break the script  asdfasd user notfound
THETIME=$2 # Handle root call           # looks complicated but we only have to manage two arguments here
if [ "$2" == "" ]; then
    THETIME=$1
    if [ "$1" != "" ]; then
        if [ "$1" == "query" ]; then  # good
            THETIME="noarguser"
        elif [ "$1" == "SRC" ] || [ "$1" == "src" ]; then
            THETIME="$2"
			if [ "$2" == "" ]; then THETIME="noarguser"; fi
        else # we know its a search            
            if ! [ "$1" -ge 0 ] 2>/dev/null; then # could be a file
	            test -f "$1" || { test -d "$1" || echo echo usage rct or rct time  in seconds or rct file. no such directory file or integer; exit 1; }
            fi
        fi
    else
        THETIME="noarguser" #root no time
    fi
	if [ "$2" == "SRC" ] || [ "$2" == "src" ]; then
		THETIME=$1
	fi
fi 	
if [ "$1" == "query" ]; then
    /usr/local/bin/recentchanges query "$THETIME" $USR "$dir"
elif [ "$1" == "SRC" ] || [ "$2" == "SRC" ] ; then
    /usr/local/bin/recentchanges "$1" "$THETIME" $USR "$dir"
else
    /usr/local/bin/recentchanges search "$THETIME" $USR "$dir" filtered
fi
