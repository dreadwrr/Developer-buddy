#!/bin/bash
. /usr/local/save-changesnew/rntchangesfunctions
atmp="$1"
SORTCOMPLETE="$2"
ofile="$3"
checkSUM="$4"
rout="$atmp/haloop1_${RANDOM}$$_tmp.log"
tfile="$atmp/haloop2_${RANDOM}$$_tmp.log"
mapfile -t ref_lines < "$ofile"
while IFS= read -r p || [ -n "$p" ]; do
	found_line=""
	cFILE=$(perl -nE 'say $1 if /"((?:[^"\\]|\\.)*)"/' <<< "$p")  
	y="$( escapef "$cFILE")"
	current_ln="${p//\"$y\"/}"
	current_ln="$(echo "$current_ln" | xargs)"
	read -r f1 f2 f3 f4 f5 f6 rest <<< "$current_ln"
    in="$f3"
    if [ -n "$in" ] && [ "$in" -ge 0 ] 2>/dev/null; then
		for line in "${ref_lines[@]}"; do if [[ "$line" == *"\"$y\""* ]]; then found_line="$line" ; fi ; done
		if [ -n "$found_line" ]; then
			sline="$found_line"
			original_ln="${sline//\"$y\"/}"
			original_ln="$(echo "$original_ln" | xargs)" 
			read -r of1 of2 of3 of4 of5 of6 orest <<< "$original_ln"
			cFILE="$(unescf "$cFILE")"
			oin="$of3"
			if [ -n "$oin" ] && [ "$oin" -ge 0 ] 2>/dev/null; then
				omt="$of1 $of2"
				oat="$of4 $of5" 
				org="$of6"
				t=$(date -d "$oat" +%s 2>/dev/null)   
				read -r f1 f2 f3 f4 f5 f6 rest <<< "$current_ln"
				dt="$f1 $f2"
				cat="$f4 $f5"
				cs="$f6"
				k=$(date -d "$cat" +%s 2>/dev/null)
				if [ "$dt" == "$omt" ]; then
					if [ "$checkSUM" == "true" ]; then
						if [ -n "$t" ] && [ -n "$k" ]; then
							if [ -n "$org" ] && [ -n "$cs" ] && [ -f "$cFILE" ]; then
								os="$orest"
								csze="$rest"
								if [ -n "$csze" ]; then
									if [ "$org" != "$cs" ]; then
										a_checksum=$(md5sum "$cFILE" | awk '{print $1}') 
										a_mod=$(stat --format=%Y "$cFILE")
										afrm=$(date -d "@$a_mod" +"%Y-%m-%d %H:%M:%S")
										if [ -n "$os" ] && [ -n "$afrm" ]; then
											if [ "$afrm" == "$dt" ]; then
												echo "Csumc $dt $y"| tee -a "$rout" >> "$tfile"| tee -a /tmp/cerr; csm="true"	
											else
												if [ "$a_checksum" != "$cs" ] && [ "$cdiag" == "true" ]; then
													echo "File changed during the search. ${y} at ${afrm}. Size was $os, now $fs. " >> /tmp/scr
												elif [ "$a_checksum" != "$cs" ]; then
													echo "File changed during search ${y}. File likely changed. system cache item." >> /tmp/scr
												fi
											fi	
										fi
									else
										stealth "$cFILE" $os $csze "$y" $cdiag "csum"
									fi
								fi
							fi
						fi
					fi
				else
					if (( oin != in )); then
						if [ "$checkSUM" == "true" ]; then
							if [ -n "$org" ] && [ -n "$cs" ]; then
								if [ "$org" == "$cs" ]; then
									echo "Overwrt $dt $y" | tee -a $rout >> "$tfile"
								else
									os="$orest"
									csze="$rest"
									if [ -n "$t" ] && [ -n "$k" ]; then
										if [ -n "$csze" ]; then stealth "$cFILE" $os $csze "$y" $cdiag ;fi
									fi
									echo "Replaced $dt $y" | tee -a $rout >> "$tfile"
								fi
							fi
						else
							echo "Replaced $dt $y" | tee -a $rout >> "$tfile"
						fi
					else
						if [ "$checkSUM" == "true" ]; then
							if [ -n "$org" ] && [ -n "$cs" ]; then
								if [ "$org" != "$cs" ]; then
									os="$orest"
									csze="$rest"
									if [ -n "$t" ] && [ -n "$k" ]; then
										if [ -n "$csze" ]; then stealth "$cFILE" $os $csze "$y" $cdiag ;fi
									fi
									echo "Modified $dt $y" | tee -a $rout  >> $tfile
								else
									echo "Touched $dt $y" | tee -a $rout >> $tfile
								fi
							fi
						else
							echo "Modified $dt $y" | tee -a $rout >> $tfile
						fi
					fi
				fi	
			fi
		fi
	fi
done < "$SORTCOMPLETE"
unset IFS

